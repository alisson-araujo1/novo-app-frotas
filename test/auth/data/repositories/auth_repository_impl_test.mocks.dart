// Mocks generated by Mockito 5.4.4 from annotations
// in app_frotas/test/auth/data/repositories/auth_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:app_frotas/app/modules/auth/data/datasources/auth_local_data_source.dart'
    as _i3;
import 'package:app_frotas/app/modules/auth/data/datasources/auth_remote_data_source.dart'
    as _i6;
import 'package:app_frotas/app/modules/auth/data/models/auth_response_model.dart'
    as _i4;
import 'package:dio/dio.dart' as _i2;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthLocalDataSource_1 extends _i1.SmartFake
    implements _i3.AuthLocalDataSource {
  _FakeAuthLocalDataSource_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthResponseModel_2 extends _i1.SmartFake
    implements _i4.AuthResponseModel {
  _FakeAuthResponseModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterSecureStorage_3 extends _i1.SmartFake
    implements _i5.FlutterSecureStorage {
  _FakeFlutterSecureStorage_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRemoteDataSource extends _i1.Mock
    implements _i6.AuthRemoteDataSource {
  MockAuthRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  _i3.AuthLocalDataSource get authLocalDataSource => (super.noSuchMethod(
        Invocation.getter(#authLocalDataSource),
        returnValue: _FakeAuthLocalDataSource_1(
          this,
          Invocation.getter(#authLocalDataSource),
        ),
      ) as _i3.AuthLocalDataSource);

  @override
  _i7.Future<_i4.AuthResponseModel> login(
    String? username,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            username,
            password,
          ],
        ),
        returnValue:
            _i7.Future<_i4.AuthResponseModel>.value(_FakeAuthResponseModel_2(
          this,
          Invocation.method(
            #login,
            [
              username,
              password,
            ],
          ),
        )),
      ) as _i7.Future<_i4.AuthResponseModel>);

  @override
  _i7.Future<_i4.AuthResponseModel> refreshToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshToken,
          [token],
        ),
        returnValue:
            _i7.Future<_i4.AuthResponseModel>.value(_FakeAuthResponseModel_2(
          this,
          Invocation.method(
            #refreshToken,
            [token],
          ),
        )),
      ) as _i7.Future<_i4.AuthResponseModel>);
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i3.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.FlutterSecureStorage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeFlutterSecureStorage_3(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i5.FlutterSecureStorage);

  @override
  _i7.Future<void> saveToken(String? token) => (super.noSuchMethod(
        Invocation.method(
          #saveToken,
          [token],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String?> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  _i7.Future<void> clearToken() => (super.noSuchMethod(
        Invocation.method(
          #clearToken,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
